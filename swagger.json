{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple documentation for an university project.",
    "version": "1.0.0",
    "title": "Smart Fridge"
  },
  "host": "localhost:9080",
  "tags": [
    {
      "name": "product",
      "description": "Products management"
    },
    {
      "name": "fridge",
      "description": "Fridge operations"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/products": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "Get products",
        "description": "Lists all available products",
        "operationId": "getAllProducts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Product"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "product"
        ],
        "summary": "Add product",
        "description": "Adds a new product to fridge database",
        "operationId": "addProduct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Product object that needs to be added to the fridge",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/fridge/temparature": {
      "get": {
        "tags": [
          "fridge"
        ],
        "summary": "Get temperature",
        "description": "Gets current fridge temperature",
        "operationId": "getTemperature",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Fridge"
            }
          }
        }
      },
      "post": {
        "tags": [
          "fridge"
        ],
        "summary": "Set temperature",
        "description": "Sets current fridge temperature",
        "operationId": "setTemperature",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "temperature",
            "in": "query",
            "description": "Desired temperature of the fridge",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    },
    "/fridge/recommendProduct": {
      "get": {
        "tags": [
          "fridge"
        ],
        "summary": "Recommend product",
        "description": "Recommends the product with minimum expiry date",
        "operationId": "recommendProduct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },
    "/fridge/recommendProduct/{product1}/{product2}": {
      "get": {
        "tags": [
          "fridge"
        ],
        "summary": "Choose product",
        "description": "Chooses optimal product to consume",
        "operationId": "chooseProduct",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "product1",
            "in": "path",
            "description": "Name of the first product",
            "required": true,
            "type": "string"
          },
          {
            "name": "product2",
            "in": "path",
            "description": "Name of the second product",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          }
        }
      }
    },
    "/fridge/eco": {
      "put": {
        "tags": [
          "fridge"
        ],
        "summary": "Set eco mode",
        "description": "Sets eco mode",
        "operationId": "setEcoMode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string"
        },
        "max_temp": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Fridge": {
      "type": "object",
      "properties": {
        "temperature": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Project on github",
    "url": "https://github.com/cyber-gh/iot-project"
  }
}